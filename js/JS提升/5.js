// JavaScript 执行在单线程上，所有的代码都是排队执行。
// 一开始浏览器执行全局的代码时，首先创建全局的执行上下文，压入执行栈的顶部。
// 每当进入一个函数的执行就会创建函数的执行上下文，并且把它压入执行栈的顶部。当前函数执行完成后，当前函数的执行上下文出栈，并等待垃圾回收。
// 浏览器的 JS 执行引擎总是访问栈顶的执行上下文。
